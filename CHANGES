Version 1.0.7 (2019-04-01)
--------------------------

Bug Fixes
~~~~~~~~~

* A regression in python 3 support when provisioning Beaker resources using a
  kickstart file. Spaces were inadvertently being removed when generating the
  beaker job xml causing the kickstart file unparseable.

* When provisioning OpenStack resources if a VM went into an error state it
  would sit and loop until the provisioning timeout

* When using the ansible Become options to raise user privileges during the
  execute phase, a failure would occur during the artifact step because
  the escalated user was not being used.

* When VM/resource ip is not reachable or wrong authentication key is provided
  carbon exited without proper exception message

Enhancement
~~~~~~~~~~~

* Support for ansible --skip-tags options that can be used in the ansible
  orchestrator by specifying the ansible option skip_tags and providing a
  list of tags.

* Support for defining a static inventory file directory in the carbon.cfg
  that can be used by the orchestration and execute phase to store the
  ansible inventory files.


Version 1.0.6 (2019-03-6)
--------------------------

Bug Fixes
~~~~~~~~~

* Modified the execute phase so that shell/script results.txt output generated
  is text wrapped and dedented before parsing the results

* A regression in python 3 exception handling was throwing another exception that
  the exception could not be parsed.

* The Beaker hostname is correctly save to the Provider hostname key during provision
  phase so that it correlates with the hostname folder created during the artifact
  step in the execute phase

* Modified artifact step so as to not collect artifacts during an exception
  handling if a user has not specified any artifacts.

* Modified artifact step so as to not collect artifacts during an exception
  handling when it happens during the git or artifact step.

Enhancement
~~~~~~~~~~~

* Support for assigning multiple roles to a host in the Provision phase.

* Enhanced python 3 support for native Beaker provisioner so that resources
  can be provisioned and cleaned up in a python 3 environment.

* Enhanced python 3 support modified non-carbon exception logging to
  to no longer access the 'message' attribute of an exception


Version 1.0.5 (2019-02-6)
--------------------------

Bug Fixes
~~~~~~~~~

* Permanently decoding subprocess output to utf-8

* No longer fail in the execute phase when gathering an artifact that doesn't exist.
  Now log which were successfully collected, which were skipped due to not existing,
  and which failed due to external reasons.

* Strip all carriage returns when processing script or shell command output in the
  execute phase.

* Anisble verbosity will always default to a single (-v) and can now be
  configured to any ansible supported level in the carbon.cfg file independent of
  carbon log level.

* If a cleanup task is specified for a run and carbon fails at some point before
  that cleanup task is launched, carbon will launch the cleanup task so
  as to not leave stale resources behind.

Enhancement
~~~~~~~~~~~

* Added to Beaker Credentials the optional parameter, ca_path, to allow a user to
  specify a path to a trusted CA file.

* Added to Beaker support for the host_requires_option, force=<FQDN>, to facilitate
  forcing the selection of a host regardless of state.

* Added more logging and exception handling enhancements.

Version 1.0.4 (2019-01-23)
--------------------------

Bug Fixes
~~~~~~~~~

* Needed to decode the subprocess output when running ansible playbooks

Version 1.0.3 (2018-12-5)
--------------------------

Bug Fixes
~~~~~~~~~

* Do not attempt to attach a floating ip to an OpenStack instance if the floating_ip_pool parameter is not specified

Enhancement
~~~~~~~~~~~

* General provisioning support on the latest OpenStack Cloud environment  

Version 1.0.2 (2018-10-29)
--------------------------

Bug Fixes
~~~~~~~~~

* allow host resources to contain uppercase letters

Version 1.0.1 (2018-10-02)
--------------------------

Bug Fixes
~~~~~~~~~

* removes filtering host resource names

Version 1.0.0 (2018-10-01)
--------------------------

Features
~~~~~~~~

* configuration for scenario execution
* use user defined ansible configuration
* ability to consume and use ansible roles
* input validation & defined descriptor structure
* resource checking
* internal provisioning (OpenStack and Beaker)
* ansible orchestration using ansible.
* execution support (cmd, script, or playbook)
