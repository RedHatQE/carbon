Version 1.3.1 (2019-07-18)
--------------------------

Bug fixes
~~~~~~~~~

* Ansible 2.8+ is now installed in all python environments now that Linchpin 1.7.6 has been released
* Validation was failing if a localhost was referenced in an Orchestrate task but was not an actual Host resource


Version 1.3.0 (2019-07-09)
--------------------------
New Features
~~~~~~~~~~~~

* Option to include other scenario files into your main scenario file. When you do this carbon pulls any defined
  tasks into the master scenario's task list and runs through them as one big scenario. (CID-4223 CID-4224)

Enhancements
~~~~~~~~~~~~

* Modify ansible orchestrator and executor to generate only unique inventories (CID-3915)
* Create the ansible inventory file after the provision task completes (CID-3651)
* Polarion Importer don't return fast and evaluate all polarion provider params (CID-4369)

Bug fixes
~~~~~~~~~

* Using artifacts causes install rsync task to fail on localhost (CID-4303)
* Carbon does not overwrite the existing master inventory when using'inventory_folder' in carbon.cfg (CID-4329)
* Carbon 1.2.0 doesn't accept ip_address as a valid key when provisioning static machine (CID-4367)
* When xunit file uses testsuites tag and has more then one testsuite carbon fails to tag the testcases
  with polarion-id (CID-4368)
* Running Carbon as non-privileged user that doesn't have sudo permissions fails (CID-4372)
* Running execute with ansible_options fails to parse and generate the sync playbook (CID-4423)
* Ansible 2.8+ is not installed in python 3 environments (CID-4424)


Version 1.2.0 (2019-06-06)
--------------------------
New Features
~~~~~~~~~~~~

Support for Linchpin (CID-3977).

 * Can create and delete OpenStack instances. All parameters
   except count, ca, cacert are supported.

 * Can reserve and unreserve Beaker machines. All parameters
   except count are supported.

Enchancements
~~~~~~~~~~~~~

 * Orchestrate has a status parameter that is used to determine
   whether to re-run the orchestration process from a failed task or
   from the very beginning. (CID-3535)

 * The results.yml file that carbon generates at the end of a run
   will now be ordered to match the original input scenario.yml. (CID-3993)


Bug Fixes
~~~~~~~~~

 * The role directive in Provision was confusing. Added a directive
   called groups to make things clearer. The role directive is still backwards
   compatible. (CID-4249)

 * Setting the log_level in the carbon.cfg was not being honored due to a hard
   coded value (CID-4250)

 * The playbook directive in Execute was not properly passing the playbook to
   ansible causing failures. (CID-4253)

 * When using JSONPath expression in the Execute command directive, carbon was
   mistakenly processing like its data pass-through meta characters. (CID-4293)

 * Due to some dependency issues with Linchpin and Ansible. Pinned the Ansible
   version to 2.7.9 until the Linchpin bug with Ansible 2.8 is resolved. Added and
   pinned urllib3 to the install requirements. (CID-4304)


Documentation
~~~~~~~~~~~~~
  * Added the 'key_value' to the Provision bkr-client provisioner parameters table. (CID-4085)

  * Added to the installation page the requirement of pip to be 18.1 or higher to
    install carbon 1.1.+ (CID-4273)

  * Updated the Contacts page with the latest relevant information.

  * Updated the FAQ with information on how and when to know you can use Linchpin
    as a provisioner in your scenario.


Version 1.1.1 (2019-05-15)
--------------------------

Bug Fixes
~~~~~~~~~

 * Resolve issues with a forked PIT tools repo dependency
   by taking out in the CCIT polarion importer library, Polar.
   Upgrade to Polar 1.1.1 
   https://gitlab.cee.redhat.com/ccit/ccit-report-tools/polar

 * Resolve an issue where the xUnit Importer would state the 
   import was succesful but failed to generate a UMB Message
   so the CCIT polarion importer library would fail the import
   since it couldn't parse a message. Updated to Polar 1.1.1

 * Modified carbon's setup file to include the following packages 
   in install_requires paramiko 2.4.2, ansible >= 2.7, 
   and requests>=2.20.1
   

Version 1.1.0 (2019-05-06)
--------------------------

New Feature
~~~~~~~~~~~

Support for the Polarion xUnit Importer in the Report phase. 

 * Can take an xUnit file collect during execute, modify it 
   with the polarion tags, import the results to the xUnit 
   importer and monitor for import completion

 * Can take an xUnit file collected during execute and just 
   import the results to the xUnit importer and monitor for
   import completion 


Version 1.0.7 (2019-04-01)
--------------------------

Bug Fixes
~~~~~~~~~

* A regression in python 3 support when provisioning Beaker resources using a
  kickstart file. Spaces were inadvertently being removed when generating the
  beaker job xml causing the kickstart file unparseable.

* When provisioning OpenStack resources if a VM went into an error state it
  would sit and loop until the provisioning timeout

* When using the ansible Become options to raise user privileges during the
  execute phase, a failure would occur during the artifact step because
  the escalated user was not being used.

* When VM/resource ip is not reachable or wrong authentication key is provided
  carbon exited without proper exception message

Enhancement
~~~~~~~~~~~

* Support for ansible --skip-tags options that can be used in the ansible
  orchestrator by specifying the ansible option skip_tags and providing a
  list of tags.

* Support for defining a static inventory file directory in the carbon.cfg
  that can be used by the orchestration and execute phase to store the
  ansible inventory files.


Version 1.0.6 (2019-03-6)
--------------------------

Bug Fixes
~~~~~~~~~

* Modified the execute phase so that shell/script results.txt output generated
  is text wrapped and dedented before parsing the results

* A regression in python 3 exception handling was throwing another exception that
  the exception could not be parsed.

* The Beaker hostname is correctly save to the Provider hostname key during provision
  phase so that it correlates with the hostname folder created during the artifact
  step in the execute phase

* Modified artifact step so as to not collect artifacts during an exception
  handling if a user has not specified any artifacts.

* Modified artifact step so as to not collect artifacts during an exception
  handling when it happens during the git or artifact step.

Enhancement
~~~~~~~~~~~

* Support for assigning multiple roles to a host in the Provision phase.

* Enhanced python 3 support for native Beaker provisioner so that resources
  can be provisioned and cleaned up in a python 3 environment.

* Enhanced python 3 support modified non-carbon exception logging to
  to no longer access the 'message' attribute of an exception


Version 1.0.5 (2019-02-6)
--------------------------

Bug Fixes
~~~~~~~~~

* Permanently decoding subprocess output to utf-8

* No longer fail in the execute phase when gathering an artifact that doesn't exist.
  Now log which were successfully collected, which were skipped due to not existing,
  and which failed due to external reasons.

* Strip all carriage returns when processing script or shell command output in the
  execute phase.

* Anisble verbosity will always default to a single (-v) and can now be
  configured to any ansible supported level in the carbon.cfg file independent of
  carbon log level.

* If a cleanup task is specified for a run and carbon fails at some point before
  that cleanup task is launched, carbon will launch the cleanup task so
  as to not leave stale resources behind.

Enhancement
~~~~~~~~~~~

* Added to Beaker Credentials the optional parameter, ca_path, to allow a user to
  specify a path to a trusted CA file.

* Added to Beaker support for the host_requires_option, force=<FQDN>, to facilitate
  forcing the selection of a host regardless of state.

* Added more logging and exception handling enhancements.

Version 1.0.4 (2019-01-23)
--------------------------

Bug Fixes
~~~~~~~~~

* Needed to decode the subprocess output when running ansible playbooks

Version 1.0.3 (2018-12-5)
--------------------------

Bug Fixes
~~~~~~~~~

* Do not attempt to attach a floating ip to an OpenStack instance if the floating_ip_pool parameter is not specified

Enhancement
~~~~~~~~~~~

* General provisioning support on the latest OpenStack Cloud environment  

Version 1.0.2 (2018-10-29)
--------------------------

Bug Fixes
~~~~~~~~~

* allow host resources to contain uppercase letters

Version 1.0.1 (2018-10-02)
--------------------------

Bug Fixes
~~~~~~~~~

* removes filtering host resource names

Version 1.0.0 (2018-10-01)
--------------------------

Features
~~~~~~~~

* configuration for scenario execution
* use user defined ansible configuration
* ability to consume and use ansible roles
* input validation & defined descriptor structure
* resource checking
* internal provisioning (OpenStack and Beaker)
* ansible orchestration using ansible.
* execution support (cmd, script, or playbook)
